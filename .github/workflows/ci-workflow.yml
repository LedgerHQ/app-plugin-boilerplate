name: Compilation & tests

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  job_build_plugin_nano_s:
    name: Build plugin for Nano S
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Clone SDK
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/ethereum-plugin-sdk
          path: ethereum-plugin-sdk
          ref: ${{ github.base_ref || github.ref_name }}
      - name: Build plugin for Nano S
        run: |
          make clean
          make BOLOS_SDK=$NANOS_SDK
  
  job_build_plugin_nano_sp:
    name: Build plugin for Nano S Plus
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Clone SDK
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/ethereum-plugin-sdk
          path: ethereum-plugin-sdk
          ref: ${{ github.base_ref || github.ref_name }}
      - name: Build plugin for Nano S Plus
        run: |
          make clean
          make BOLOS_SDK=$NANOSP_SDK

  job_build_plugin_nano_x:
    name: Build plugin for Nano X
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Clone SDK
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/ethereum-plugin-sdk
          path: ethereum-plugin-sdk
          ref: ${{ github.base_ref || github.ref_name }}
      - name: Build plugin for Nano X
        run: |
          make clean
          make BOLOS_SDK=$NANOX_SDK

  job_build_plugin_debug_nano_s:
    name: Build plugin for Nano S testing
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Clone SDK
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/ethereum-plugin-sdk
          path: ethereum-plugin-sdk
          ref: ${{ github.base_ref || github.ref_name }}
      - name: Build plugin
        run: |
          make clean
          make -j DEBUG=1 BOLOS_SDK=$NANOS_SDK
      - name: Move binary to test directory
        run: |
          mkdir -p ./tests/elfs/
          mv bin/app.elf ./tests/elfs/plugin_nanos.elf
      - name: Upload plugin binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: tests/elfs/plugin_nanos.elf
  

  job_build_plugin_debug_nano_sp:
    name: Build plugin for Nano S Plus testing
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Clone SDK
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/ethereum-plugin-sdk
          path: ethereum-plugin-sdk
          ref: ${{ github.base_ref || github.ref_name }}
      - name: Build plugin
        run: |
          make clean
          make -j DEBUG=1 BOLOS_SDK=$NANOSP_SDK
      - name: Move binary to test directory
        run: |
          mkdir -p ./tests/elfs/
          mv bin/app.elf ./tests/elfs/plugin_nanosp.elf
      - name: Upload plugin binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: tests/elfs/plugin_nanosp.elf

  job_build_plugin_debug_nano_x:
    name: Build plugin for Nano X testing
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Clone SDK
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/ethereum-plugin-sdk
          path: ethereum-plugin-sdk
          ref: ${{ github.base_ref || github.ref_name }}
      - name: Build plugin
        run: |
          make clean
          make -j DEBUG=1 BOLOS_SDK=$NANOX_SDK
      - name: Move binary to test directory
        run: |
          mkdir -p ./tests/elfs/
          mv bin/app.elf ./tests/elfs/plugin_nanox.elf
      - name: Upload plugin binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: tests/elfs/plugin_nanox.elf

  job_build_ethereum_nano_s:
    name: Build Ethereum application for Nano S testing
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Checkout app-ethereum
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/app-ethereum
          ref: ${{ github.base_ref || github.ref_name }}
          submodules: recursive
      - name: Build ethereum
        run: |
          make clean
          make -j DEBUG=1 BYPASS_SIGNATURES=1 BOLOS_SDK=$NANOS_SDK CHAIN=ethereum
      - name: Move binary to test directory
        run: |
          mkdir -p ./tests/elfs/
          mv bin/app.elf ./tests/elfs/ethereum_nanos.elf
      - name: Upload plugin binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: tests/elfs/ethereum_nanos.elf
  
  job_build_ethereum_nano_sp:
    name: Build Ethereum application for Nano S Plus testing
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Checkout app-ethereum
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/app-ethereum
          ref: ${{ github.base_ref || github.ref_name }}
          submodules: recursive
      - name: Build ethereum
        run: |
          make clean
          make -j DEBUG=1 BYPASS_SIGNATURES=1 BOLOS_SDK=$NANOSP_SDK CHAIN=ethereum
      - name: Move binary to test directory
        run: |
          mkdir -p ./tests/elfs/
          mv bin/app.elf ./tests/elfs/ethereum_nanosp.elf
      - name: Upload plugin binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: tests/elfs/ethereum_nanosp.elf

  job_build_ethereum_nano_x:
    name: Build Ethereum application for Nano X testing
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Checkout app-ethereum
        uses: actions/checkout@v2
        with:
          repository: LedgerHQ/app-ethereum
          ref: ${{ github.base_ref || github.ref_name }}
          submodules: recursive
      - name: Build ethereum
        run: |
          make clean
          make -j DEBUG=1 BYPASS_SIGNATURES=1 BOLOS_SDK=$NANOX_SDK CHAIN=ethereum
      - name: Move binary to test directory
        run: |
          mkdir -p ./tests/elfs/
          mv bin/app.elf ./tests/elfs/ethereum_nanox.elf
      - name: Upload plugin binary
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: tests/elfs/ethereum_nanox.elf

  jobs-e2e-tests:
    name: E2E Tests
    needs: [job_build_plugin_debug_nano_s, job_build_plugin_debug_nano_sp, job_build_plugin_debug_nano_x, job_build_ethereum_nano_s, job_build_ethereum_nano_sp, job_build_ethereum_nano_x]
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          id
          echo $HOME
          echo $DISPLAY
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download built binaries
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: tests/elfs/
      - name: Check downloaded binaries
        run: ls -lh ./tests/elfs
      - name: Install system dependencies
        run: sudo apt-get update -y && sudo apt-get install -y libusb-1.0.0 libudev-dev
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: "18.13.0"
      - name: Install yarn
        run: |
          npm install -g yarn
      - name: Build/Install build js deps
        run: |
          cd tests && yarn install
      - name: Run zemu tests
        run: |
          cd tests && yarn test
